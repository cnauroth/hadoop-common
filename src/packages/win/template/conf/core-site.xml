<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!-- Put site-specific property overrides in this file. -->

<configuration xmlns:xi="http://www.w3.org/2001/XInclude">

  <property>
    <name>fs.default.name</name>
    <!-- cluster variant -->
    <value>hdfs://localhost:8020</value>
    <description>The name of the default file system.  Either the
  literal string "local" or a host:port for NDFS.</description>
    <final>true</final>
  </property>

  <property>
    <name>hadoop.tmp.dir</name>
    <value>/hadoop/hdfs/tmp</value>
    <description>A base for other temporary directories.</description>
  </property>

  <property>
    <name>fs.trash.interval</name>
    <value>360</value>
    <description>Number of minutes between trash checkpoints.
  If zero, the trash feature is disabled.
  </description>
  </property>

  <property>
    <name>fs.checkpoint.dir</name>
    <value>C:\Hadoop\hdfs\2nn</value>
    <description>Determines where on the local filesystem the DFS secondary
        name node should store the temporary images to merge.
        If this is a comma-delimited list of directories then the image is
        replicated in all of the directories for redundancy.
    </description>
  </property>

  <property>
    <name>fs.checkpoint.edits.dir</name>
    <value>C:\Hadoop\hdfs\2nn</value>
    <description>Determines where on the local filesystem the DFS secondary
        name node should store the temporary edits to merge.
        If this is a comma-delimited list of directoires then teh edits is
        replicated in all of the directoires for redundancy.
        Default value is same as fs.checkpoint.dir
    </description>
  </property>

  <property>
    <name>fs.checkpoint.period</name>
    <value>86400</value>
    <description>The number of seconds between two periodic checkpoints.
  </description>
  </property>

  <property>
    <name>fs.checkpoint.size</name>
    <value>2048000000</value>
    <description>The size of the current edit log (in bytes) that triggers
       a periodic checkpoint even if the fs.checkpoint.period hasn't expired.
  </description>
  </property>

</configuration>
